version: '3.9'

services:
  api-e2e:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: api-e2e
    user: root
    ports:
      - "3000:3000"
    env_file:
      - .env.e2e
    environment:
      - NODE_ENV=test
      - PORT=3000
      - BACK_BASE_URL=http://api-e2e:3000
      - DATABASE_URL=postgresql://postgres:1111@postgres-e2e:5432/weather_test
      - SMTP_HOST=mailhog-e2e
      - SMTP_PORT=1025
      - SMTP_USERNAME=test@example.com
      - SMTP_PASSWORD=test_password
      - WEATHER_API_KEY=test_api_key
      - WEATHER_API_BASE_URL=http://mock-server:1080
      - OPEN_WEATHER_API_KEY=test_open_weather_key
      - OPEN_WEATHER_BASE_URL=http://mock-server:1080
      - WEATHER_CACHE_TTL=300
      - DAILY_FORECAST_CACHE_TTL=3600
      - HOURLY_FORECAST_CACHE_TTL=1800
    depends_on:
      postgres-e2e:
        condition: service_healthy
      mock-server:
        condition: service_started
      mailhog:
        condition: service_started
    volumes:
      - api_logs:/usr/src/app/logs
    command: ["sh", "-c", "npx prisma generate --schema=src/prisma/schema.prisma && npx prisma migrate deploy --schema=src/prisma/schema.prisma && npm run start:dev"]
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 12

  postgres-e2e:
    image: postgres:latest
    container_name: postgres-e2e
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: weather_test
    ports:
      - "5433:5432"
    volumes:
      - postgres_e2e_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mock-server:
    image: mockserver/mockserver:latest
    container_name: mock-server-e2e
    ports:
      - "3001:1080"
    environment:
      - MOCKSERVER_WATCH_INITIALIZATION_JSON=true
      - MOCKSERVER_PROPERTY_FILE=/config/mockserver.properties
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/initializerJson.json
    volumes:
      - ./test/mocks:/config

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog-e2e
    ports:
      - "8025:8025"
      - "1025:1025"

  playwright:
    build:
      context: .
      dockerfile: Dockerfile.playwright
    container_name: playwright-e2e
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - BASE_URL=http://api-e2e:3000
    depends_on:
      api-e2e:
        condition: service_healthy
    command: ["npx", "playwright", "test", "--config=test/e2e/playwright.config.ts"]

volumes:
  postgres_e2e_data:
  api_logs: