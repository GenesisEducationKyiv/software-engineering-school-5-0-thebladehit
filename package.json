{
  "name": "weather-api-subscription",
  "version": "0.0.1",
  "description": "",
  "author": "thebladehit",
  "private": true,
  "license": "UNLICENSED",
  "workspaces": [
    "apps/*",
    "libs/*"
  ],
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"apps/**/*.ts\" \"libs/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/apps/weather-api-subscription/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "pretest:integration": "docker compose -f docker-compose.test.yaml up -d postgres redis && dotenv -e .env.test -- npx prisma migrate deploy --schema=./src/prisma",
    "test:integration": "dotenv -e .env.test -- jest --config ./test/integration/jest.integration.json",
    "posttest:integration": "docker compose -f docker-compose.test.yaml down -v postgres redis",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "pretest:e2e": "docker compose -f docker-compose.test.yaml up -d && ./wait.sh",
    "test:e2e": "playwright apps/weather-api-subscription/test -c test/e2e/playwright.config.ts",
    "posttest:e2e": "docker compose -f docker-compose.test.yaml down -v",
    "test:arch": "npx depcruise -c test/architecture/.dependency-cruiser.js src",
    "prisma:migrate:deploy": "prisma migrate deploy --schema=./src/prisma/schema.prisma",
    "prisma:generate": "prisma generate --schema=./src/prisma/schema.prisma"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/axios": "^4.0.0",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^10.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/serve-static": "4.0",
    "@prisma/client": "^6.4.1",
    "@willsoto/nestjs-prometheus": "^6.0.2",
    "axios": "^1.10.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "dotenv-cli": "^8.0.0",
    "handlebars": "^4.7.8",
    "joi": "^17.13.3",
    "nest-winston": "^1.10.2",
    "nodemailer": "^7.0.3",
    "prom-client": "^15.1.3",
    "reflect-metadata": "^0.2.0",
    "rxjs": "^7.8.1",
    "winston": "^3.17.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.4.17",
    "@playwright/test": "^1.53.1",
    "@testcontainers/postgresql": "^11.0.3",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/node": "^20.3.1",
    "@types/nodemailer": "^6.4.17",
    "@types/supertest": "^6.0.0",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "dependency-cruiser": "^16.10.3",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-prettier": "^5.4.1",
    "eslint-plugin-promise": "^7.2.1",
    "eslint-plugin-unused-imports": "^4.1.4",
    "jest": "^29.5.0",
    "prettier": "^3.0.0",
    "prisma": "^6.8.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": ".",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "testPathIgnorePatterns": [
      "<rootDir>/dist/"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node",
    "roots": [
      "<rootDir>/apps/",
      "<rootDir>/libs/"
    ],
    "moduleNameMapper": {
      "^@app/common/libs/common(|/.*)$": "<rootDir>/libs/libs/common/src/$1",
      "^@app/common/common(|/.*)$": "<rootDir>/libs/common/src/$1"
    }
  }
}
