version: '3.9'

services:
  weather:
    build:
      context: .
      dockerfile: ./apps/weather/Dockerfile
      target: development
    restart: always
    ports:
      - "3001:3001"
    env_file:
      - ./apps/weather/.env
    command: npm run start weather
    depends_on:
      redis:
        condition: service_healthy

  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    restart: always
    ports:
      - "3002:3002"
    env_file:
      - ./apps/notifications/.env
    command: npm run start notifications

  subscriptions:
    build:
      context: .
      dockerfile: ./apps/subscriptions/Dockerfile
      target: development
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ./apps/subscriptions/.env
    command: ["sh", "-c", "npx prisma generate --schema=apps/subscriptions/src/prisma && npx prisma migrate deploy --schema=apps/subscriptions/src/prisma && npm run start subscriptions"]
    depends_on:
      postgres:
        condition: service_healthy
      notifications:
        condition: service_started
      weather:
        condition: service_started

  gateway:
    build:
      context: .
      dockerfile: ./apps/gateway/Dockerfile
      target: development
    restart: always
    ports:
      - "3003:3003"
    env_file:
      - ./apps/gateway/.env
    command: npm run start gateway
    depends_on:
      subscriptions:
        condition: service_started
      weather:
        condition: service_started

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: weather
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5


  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
